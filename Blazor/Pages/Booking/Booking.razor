@page "/booking"
@attribute [Authorize]
@using BlazorBootstrap
@using Blazor.Models.ViewModels
@using DomainModels.Enums
@using Microsoft.AspNetCore.Components.Forms

<div class="container">
    <div class="card">
        <div class="card-header">
            <h3 class="title">Create a Booking</h3>
        </div>

        <EditForm class="form" Model="Vm" OnValidSubmit="OnCreateClicked">
            <DataAnnotationsValidator />
            <ValidationSummary />

            <div class="grid2">
                <div>
                    <label>Username</label>
                    <InputText class="input" @bind-Value="Vm.UserName" disabled />
                </div>

                <div>
                    <label>Hotel</label>
                    <InputSelect class="input"
                                 @bind-Value="Vm.HotelName"
                                 @onchange="OnHotelChanged">
                        <option value="">-- Select hotel --</option>
                        @foreach (var h in Hotels)
                        {
                            <option value="@h">@h</option>
                        }
                    </InputSelect>
                </div>

                <div>
                    <label>Guests</label>
                    <InputNumber class="input"
                                 @bind-Value="Vm.GuestsCount"
                                 @onchange="OnGuestsChanged" />
                </div>

                <div>
                    <InputSelect class="input"
                                 TValue="int"
                                 @bind-Value="Vm.RoomTypeId"
                                 disabled="@(!IsRoomTypeEnabled)">
                        <option value="0">-- Select room type --</option>
                        @foreach (var rt in AllowedRoomTypes.Where(rt => rt.MaxCapacity >= Vm.GuestsCount))
                        {
                            <option value="@rt.Id">@rt.TypeofRoom</option>
                        }
                    </InputSelect>
                    @* <label>Room type</label>
                    <InputSelect class="input"
                                 TValue="int?"
                                 @bind-Value="Vm.RoomTypeId"
                                 disabled="@(!IsRoomTypeEnabled)"
                                 @onchange="OnRoomTypeChanged">
                        <option value="">-- Select room type --</option>
                        @foreach (var rt in AllowedRoomTypes.Where(rt => rt.MaxCapacity >= Vm.GuestsCount))
                        {
                            <option value="@rt.Id">@rt.TypeofRoom</option>
                        }                     </InputSelect>*@

                </div>

                <div>
                    <label>Check-in</label>
                    <InputDate class="input" @bind-Value="Vm.CheckIn" />
                </div>

                <div>
                    <label>Check-out</label>
                    <InputDate class="input" @bind-Value="Vm.CheckOut" />
                </div>

                <div>
                    <label>Nights</label>
                    <InputNumber class="input" @bind-Value="Vm.NightsCount" disabled />
                </div>

                <div class="full">
                    <InputCheckbox @bind-Value="Vm.IsBreakfast" />
                    <label class="ml">Breakfast for all nights</label>
                </div>
            </div>

            @if (!string.IsNullOrWhiteSpace(FormError))
            {
                <div class="alert">@FormError</div>
            }

            <div class="actions">
                <button type="submit" class="btn" disabled="@(!CanProceed || IsSubmitting)">Create</button>
            </div>
        </EditForm>
    </div>
</div>
